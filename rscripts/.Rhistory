packages <- c("odbc",
"DBI",
"rstudioapi",
"tidyverse",
"here",
"readr",
"lubridate",
"scales",
"readr",
"kableExtra",
"readxl",
"DT",
"scales",
"plotly",
"rmarkdown",
"rlist",
"here",
"openxlsx",
"fingertipsR",
"gt",
"viridis",
"ggrepel",
"tidytext")
### install all packages that are not already installed
install.packages(setdiff(packages, rownames(installed.packages())))
### load packages into the library
lapply(packages, library, character.only = TRUE)
region_name = "South East"
region_code = "Y59"
ICS_code <- c("QU9", "QNQ", "QRL", "QKS", "QXU", "QNX")
ICS_name <- c("NHS Buckinghamshire, Oxfordshire and Berkshire West ICB",
"NHS Frimley ICB",
"NHS Hampshire and the Isle of Wight ICB",
"NHS Kent and Medway ICB",
"NHS Surrey Heartlands ICB",
"NHS Sussex ICB")
ICS_df <- data.frame(ICS_name, ICS_code)
ONS_mortality <- read_excel("C:/Users/MichaelPerham/Downloads/ONS_mortality_condition_2023.xlsx",
sheet = "Table_2", range = "A5:M17865")
ONS_mortality <- ONS_mortality%>%
mutate_at(c('Number Of Deaths', 'Population', 'Crude Rate Per 100,000 Person Years',
'Crude Rate Per 100,000 Person Years 95% Lower Confidence Limit',
'Crude Rate Per 100,000 Person Years 95% Upper Confidence Limit',
'Age-Standardised Rate Per 100,000 Person Years',
'Age-Standardised Rate Per 100,000 Person Years 95% Lower Confidence Limit',
'Age-Standardised Rate Per 100,000 Person Years 95% Upper Confidence Limit'), as.numeric) %>%
mutate_if(is.numeric, ~round(., 1))
ONS_mortality_ENG <- ONS_mortality%>%
filter(Domain == "All People",
`Condition Group` == "Respiratory Diseases",
Condition != "Covid-19",
Sex == "All People")%>%
mutate(Group = "England",
Group2 = reorder_within(Group, `Age-Standardised Rate Per 100,000 Person Years`, Condition))
ONS_mortality_ENG_all <- ONS_mortality_ENG%>%
select(Condition, `Age-Standardised Rate Per 100,000 Person Years`)%>%
rename("England Rate" = `Age-Standardised Rate Per 100,000 Person Years`)
ONS_mortality_ENG <- ONS_mortality%>%
filter(Domain == "All People",
`Condition Group` == "Respiratory Diseases",
Condition != "Covid-19",
Sex == "All People")%>%
mutate(Group = "England",
Group2 = reorder_within(Group, `Age-Standardised Rate Per 100,000 Person Years`, Condition))
ONS_mortality_ENG <- ONS_mortality%>%
filter(Domain == "All People",
`Condition Group` == "Respiratory Diseases",
Condition != "Covid-19",
Sex == "All People")
packages <- c("odbc",
"DBI",
"rstudioapi",
"tidyverse",
"here",
"readr",
"lubridate",
"scales",
"readr",
"kableExtra",
"readxl",
"DT",
"scales",
"plotly",
"rmarkdown",
"rlist",
"here",
"openxlsx",
#"fingertipsR",
"gt",
"viridis",
"ggrepel",
"tidytext")
install.packages(setdiff(packages, rownames(installed.packages())))
if (!require("pacman")) install.packages("pacman")
library(pacman)
pacman::p_load("odbc",
"DBI",
"rstudioapi",
"tidyverse",
"here",
"readr",
"lubridate",
"scales",
"readr",
"kableExtra",
"readxl",
"DT",
"scales",
"plotly",
"rmarkdown",
"rlist",
"here",
"openxlsx",
#"fingertipsR",
"gt",
"viridis",
"ggrepel",
"tidytext")
ONS_mortality_ENG <- ONS_mortality%>%
filter(Domain == "All People",
`Condition Group` == "Respiratory Diseases",
Condition != "Covid-19",
Sex == "All People")%>%
mutate(Group = "England",
Group2 = reorder_within(Group, `Age-Standardised Rate Per 100,000 Person Years`, Condition))
ONS_mortality_ENG_all <- ONS_mortality_ENG%>%
select(Condition, `Age-Standardised Rate Per 100,000 Person Years`)%>%
rename("England Rate" = `Age-Standardised Rate Per 100,000 Person Years`)
ONS_mortality_region <- ONS_mortality%>%
filter(Domain == "Region",
`Condition Group` == "Respiratory Diseases",
Condition != "Covid-19",
Sex == "All People")%>%
mutate(region_flag = case_when(Group == region_name ~ region_name,
TRUE ~ "Other Region"),
Group = case_when(Group == "Yorkshire and The Humber" ~ "Yorkshire & Humber",
TRUE ~ Group),
Group2 = reorder_within(Group, `Age-Standardised Rate Per 100,000 Person Years`, Condition))%>%
left_join(ONS_mortality_ENG_all, by = c("Condition"))
ONS_mortality_ENG_sex <- ONS_mortality%>%
filter(Domain == "All People",
`Condition Group` == "Respiratory Diseases",
Condition != "Covid-19",
Sex != "All People")%>%
select(Condition, Sex, `Age-Standardised Rate Per 100,000 Person Years`)%>%
rename("England Rate" = `Age-Standardised Rate Per 100,000 Person Years`)
ONS_mortality_region_sex <- ONS_mortality%>%
filter(Domain == "Region",
`Condition Group` == "Respiratory Diseases",
Condition != "Covid-19",
Sex != "All People",
Group == "South East")%>%
mutate(Group2 = reorder_within(Group, `Age-Standardised Rate Per 100,000 Person Years`, Condition))%>%
left_join(ONS_mortality_ENG_sex, by = c("Condition", "Sex"))
View(ONS_mortality)
region_sex_chart <- ggplot(ONS_mortality_region_sex, aes(x = Group2,
y = `Age-Standardised Rate Per 100,000 Person Years`, fill = Sex))+
geom_bar(stat="identity", position = "dodge")+
facet_wrap(~`Condition`, ncol = 3, scales = "free")+
scale_x_reordered() +
geom_errorbar(aes(ymin = `Age-Standardised Rate Per 100,000 Person Years 95% Lower Confidence Limit`,
ymax = `Age-Standardised Rate Per 100,000 Person Years 95% Upper Confidence Limit`),
position = position_dodge(0.95), width=0.3, linewidth=1.2)+
geom_point(data = ONS_mortality_region_sex, aes(x=Group2, y=`England Rate`, color = "England"),
position = position_dodge(0.95), size = 8)+
scale_color_manual(name = "", values = c('England' = "#F58230"))+
guides(fill = guide_legend(override.aes = list(shape = NA)))+
labs(title = "Rates of mortality involving respiratory health conditions by gender",
subtitle = paste0(region_name),
caption = "Data Source: ONS (2023)",
x = "")+
theme(strip.background = element_rect(fill = "#005EB8"),
strip.text = element_text(color = "white", size = 14, face = "bold"),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 14),
axis.title = element_text(size = 12),
plot.title = element_text(size = 20, color = "#005EB8"),
plot.subtitle = element_text(size = 18),
plot.caption = element_text(size = 14),
legend.position = "bottom",
legend.key.size = unit(2,"line"),
legend.text = element_text(size = 14))
region_sex_chart
ONS_mortality_region_average <- ONS_mortality_region%>%
filter(Group == "South East")%>%
select(Condition, `Age-Standardised Rate Per 100,000 Person Years`)%>%
rename("Region Rate" = `Age-Standardised Rate Per 100,000 Person Years`)
ONS_mortality_UTLA <- read_excel(paste0(my_file_path_data,"ONS_mortality_condition_2023.xlsx"),
sheet = "UTLA")
ONS_mortality_UTLA_all <- ONS_mortality_UTLA%>%
mutate_at(c('Number Of Deaths', 'Population', 'Crude Rate Per 100,000 Person Years',
'Crude Rate Per 100,000 Person Years 95% Lower Confidence Limit',
'Crude Rate Per 100,000 Person Years 95% Upper Confidence Limit',
'Age-Standardised Rate Per 100,000 Person Years',
'Age-Standardised Rate Per 100,000 Person Years 95% Lower Confidence Limit',
'Age-Standardised Rate Per 100,000 Person Years 95% Upper Confidence Limit'), as.numeric) %>%
mutate_if(is.numeric, ~round(., 1)) %>%
filter(`Condition Group` == "Respiratory Diseases",
Condition != "Covid-19",
Sex == "All People",
Region == region_name)%>%
mutate(Group2 = reorder_within(Group, `Age-Standardised Rate Per 100,000 Person Years`, Condition))%>%
left_join(ONS_mortality_region_average, by = c("Condition"))
ONS_mortality_region_average <- ONS_mortality_region%>%
filter(Group == "South East")%>%
select(Condition, `Age-Standardised Rate Per 100,000 Person Years`)%>%
rename("Region Rate" = `Age-Standardised Rate Per 100,000 Person Years`)
ONS_mortality_region <- ONS_mortality%>%
filter(Domain == "Region",
`Condition Group` == "Respiratory Diseases",
Condition != "Covid-19",
Sex == "All People")%>%
mutate(region_flag = case_when(Group == region_name ~ region_name,
TRUE ~ "Other Region"),
Group = case_when(Group == "Yorkshire and The Humber" ~ "Yorkshire & Humber",
TRUE ~ Group),
Group2 = reorder_within(Group, `Age-Standardised Rate Per 100,000 Person Years`, Condition))%>%
left_join(ONS_mortality_ENG_all, by = c("Condition"))
View(ONS_mortality_region)
ONS_mortality_region <- ONS_mortality%>%
filter(Domain == "Region",
`Condition Group` == "Respiratory Diseases",
Condition != "Covid-19",
Sex == "All People")
ONS_mortality_region <- ONS_mortality%>%
filter(Domain == "Region",
`Condition Group` == "Respiratory Diseases",
Condition != "Covid-19",
Sex == "All People")%>%
mutate(region_flag = case_when(Group == region_name ~ region_name,
TRUE ~ "Other Region"),
Group = case_when(Group == "Yorkshire and The Humber" ~ "Yorkshire & Humber",
TRUE ~ Group),
Group2 = reorder_within(Group, `Age-Standardised Rate Per 100,000 Person Years`, Condition))%>%
left_join(ONS_mortality_ENG_all, by = c("Condition"))
View(ONS_mortality_ENG)
ONS_mortality_ENG_sex <- ONS_mortality%>%
filter(Domain == "All People",
`Condition Group` == "Respiratory Diseases",
Condition != "Covid-19",
Sex != "All People")%>%
select(Condition, Sex, `Age-Standardised Rate Per 100,000 Person Years`)%>%
rename("England Rate" = `Age-Standardised Rate Per 100,000 Person Years`)
View(ONS_mortality_region_sex)
region_chart <- ggplot(ONS_mortality_region, aes(x = Group2,
y = `Age-Standardised Rate Per 100,000 Person Years`, fill = region_flag))+
geom_bar(stat="identity", position = "dodge")+
scale_fill_manual(name = "", values=c("grey", "#005EB8"))+
facet_wrap(~`Condition`, ncol = 3, scales = "free")+
scale_x_reordered() +
geom_errorbar(aes(ymin = `Age-Standardised Rate Per 100,000 Person Years 95% Lower Confidence Limit`,
ymax = `Age-Standardised Rate Per 100,000 Person Years 95% Upper Confidence Limit`),
position = position_dodge(0.95), width=0.3, linewidth=1.2)+
geom_line(data = ONS_mortality_region, aes(x=Group2, y=`England Rate`, color = 'England', group = 1),
linetype=2, linewidth = 2)+
scale_color_manual(name = "", values = c('England' = "#F58230")) +
labs(title = "Rates of mortality involving respiratory health conditions",
subtitle = paste0(region_name),
caption = "Data Source: ONS (2023)",
x = "ONS Region")+
theme(strip.background = element_rect(fill = "#005EB8"),
strip.text = element_text(color = "white", size = 14, face = "bold"),
axis.text.x = element_text(size = 12, angle = 90),
axis.text.y = element_text(size = 14),
axis.title = element_text(size = 12),
plot.title = element_text(size = 20, color = "#005EB8"),
plot.subtitle = element_text(size = 18),
plot.caption = element_text(size = 14),
legend.position = "bottom",
legend.key.size = unit(2,"line"),
legend.text = element_text(size = 14))
region_chart
ONS_mortality_region_average <- ONS_mortality_region%>%
filter(Group == "South East")%>%
select(Condition, `Age-Standardised Rate Per 100,000 Person Years`)%>%
rename("Region Rate" = `Age-Standardised Rate Per 100,000 Person Years`)
ONS_mortality_UTLA <- read_excel(paste0(my_file_path_data,"ONS_mortality_condition_2023.xlsx"),
sheet = "UTLA")
ONS_mortality_UTLA_all <- ONS_mortality_UTLA%>%
mutate_at(c('Number Of Deaths', 'Population', 'Crude Rate Per 100,000 Person Years',
'Crude Rate Per 100,000 Person Years 95% Lower Confidence Limit',
'Crude Rate Per 100,000 Person Years 95% Upper Confidence Limit',
'Age-Standardised Rate Per 100,000 Person Years',
'Age-Standardised Rate Per 100,000 Person Years 95% Lower Confidence Limit',
'Age-Standardised Rate Per 100,000 Person Years 95% Upper Confidence Limit'), as.numeric) %>%
mutate_if(is.numeric, ~round(., 1)) %>%
filter(`Condition Group` == "Respiratory Diseases",
Condition != "Covid-19",
Sex == "All People",
Region == region_name)%>%
mutate(Group2 = reorder_within(Group, `Age-Standardised Rate Per 100,000 Person Years`, Condition))%>%
left_join(ONS_mortality_region_average, by = c("Condition"))
ONS_mortality_region_average <- ONS_mortality_region%>%
filter(Group == "South East")%>%
select(Condition, `Age-Standardised Rate Per 100,000 Person Years`)%>%
rename("Region Rate" = `Age-Standardised Rate Per 100,000 Person Years`)
ONS_mortality_UTLA <- read_excel("C:/Users/MichaelPerham/Downloads/ONS_mortality_condition_2023.xlsx",
sheet = "UTLA")
ONS_mortality_UTLA_all <- ONS_mortality_UTLA%>%
mutate_at(c('Number Of Deaths', 'Population', 'Crude Rate Per 100,000 Person Years',
'Crude Rate Per 100,000 Person Years 95% Lower Confidence Limit',
'Crude Rate Per 100,000 Person Years 95% Upper Confidence Limit',
'Age-Standardised Rate Per 100,000 Person Years',
'Age-Standardised Rate Per 100,000 Person Years 95% Lower Confidence Limit',
'Age-Standardised Rate Per 100,000 Person Years 95% Upper Confidence Limit'), as.numeric) %>%
mutate_if(is.numeric, ~round(., 1)) %>%
filter(`Condition Group` == "Respiratory Diseases",
Condition != "Covid-19",
Sex == "All People",
Region == region_name)%>%
mutate(Group2 = reorder_within(Group, `Age-Standardised Rate Per 100,000 Person Years`, Condition))%>%
left_join(ONS_mortality_region_average, by = c("Condition"))
View(ONS_mortality_UTLA_all)
UTLA_chart <- ggplot(ONS_mortality_UTLA_all, aes(x = Group2,
y = `Age-Standardised Rate Per 100,000 Person Years`, fill = Group))+
geom_bar(stat="identity", position = "dodge")+
facet_wrap(~`Condition`, ncol = 3, scales = "free")+
scale_x_reordered() +
geom_errorbar(aes(ymin = `Age-Standardised Rate Per 100,000 Person Years 95% Lower Confidence Limit`,
ymax = `Age-Standardised Rate Per 100,000 Person Years 95% Upper Confidence Limit`),
position = position_dodge(0.95), width=0.3, linewidth=1.2)+
geom_line(data = ONS_mortality_UTLA_all, aes(x=Group2, y=`Region Rate`, color = 'South East', group = 1),
linetype=2, linewidth = 2)+
scale_color_manual(name = "", values = c('South East' = "#005EB8")) +
labs(title = "Rates of mortality involving respiratory health conditions",
subtitle = paste0(region_name),
caption = "Data Source: ONS (2023)",
x = "ONS Region")+
theme(strip.background = element_rect(fill = "#005EB8"),
strip.text = element_text(color = "white", size = 14, face = "bold"),
axis.text.x = element_text(size = 12, angle = 90),
axis.text.y = element_text(size = 14),
axis.title = element_text(size = 12),
plot.title = element_text(size = 20, color = "#005EB8"),
plot.subtitle = element_text(size = 18),
plot.caption = element_text(size = 14),
legend.position = "bottom",
legend.key.size = unit(1,"line"),
legend.text = element_text(size = 12),
legend.title = element_blank())
UTLA_chart
View(ONS_mortality_region_average)
View(ONS_mortality_ENG_sex)
View(ONS_mortality_ENG)
region_name = "South East"
region_code = "Y59"
ICS_code <- c("QU9", "QNQ", "QRL", "QKS", "QXU", "QNX")
ICS_name <- c("NHS Buckinghamshire, Oxfordshire and Berkshire West ICB",
"NHS Frimley ICB",
"NHS Hampshire and the Isle of Wight ICB",
"NHS Kent and Medway ICB",
"NHS Surrey Heartlands ICB",
"NHS Sussex ICB")
ICS_df <- data.frame(ICS_name, ICS_code)
region_name = "South East"
region_code = "Y59"
ICS_code <- c("QU9", "QNQ", "QRL", "QKS", "QXU", "QNX")
ICS_name <- c("NHS Buckinghamshire, Oxfordshire and Berkshire West ICB",
"NHS Frimley ICB",
"NHS Hampshire and the Isle of Wight ICB",
"NHS Kent and Medway ICB",
"NHS Surrey Heartlands ICB",
"NHS Sussex ICB")
ICS_df <- data.frame(ICS_name, ICS_code)
sub_ICB_lookup <- read_excel("C:/Users/MichaelPerham/Downloads/sub_ICB_lookup.xlsx")
View(ICS_df)
View(sub_ICB_lookup)
ICB_lookup <- sub_ICB_lookup%>%
select(ICB_org_code, ICB_org_name, region_org_code, region_org_name)%>%
unique()
indid <- c(40701, 93724)
OHID_data <- fingertips_data(IndicatorID = indid, AreaTypeID = 221)
if (!require("pacman")) install.packages("pacman")
library(pacman)
pacman::p_load("odbc",
"DBI",
"rstudioapi",
"tidyverse",
"here",
"readr",
"lubridate",
"scales",
"readr",
"kableExtra",
"readxl",
"DT",
"scales",
"plotly",
"rmarkdown",
"rlist",
"here",
"openxlsx",
"fingertipsR",
"gt",
"viridis",
"ggrepel",
"tidytext")
remotes::install_github("rOpenSci/fingertipsR",
build_vignettes = TRUE,
dependencies = "suggests")
OHID_data <- fingertips_data(IndicatorID = indid, AreaTypeID = 221)
if (!require("pacman")) install.packages("pacman")
library(pacman)
pacman::p_load("odbc",
"DBI",
"rstudioapi",
"tidyverse",
"here",
"readr",
"lubridate",
"scales",
"readr",
"kableExtra",
"readxl",
"DT",
"scales",
"plotly",
"rmarkdown",
"rlist",
"here",
"openxlsx",
"fingertipsR",
"gt",
"viridis",
"ggrepel",
"tidytext",
"Rtools")
devtools::find_rtools()
